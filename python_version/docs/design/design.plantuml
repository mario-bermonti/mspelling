@startuml Responsibilities
!theme spacelab
entity LoginScreen{
    Collect participant id
    Add participant id to App 
}
entity BeginMessageScreen{
    Present begin message
}
entity EndMessageScreen{
    Present end message
    Let the experimenter know the task is finished
}
entity App{
    Global interactions
}
entity Data{
    Collect data
    Store data
    Manage data 
    Format data 
    Save data 
}
entity SessionData{
    Model about session info
}
entity TrialData{
    Model about Trial info
}
entity DeviceData{
    Model about Device info
}
entity Stimuli{
    Read from file
    Manage stimuli
    Randomize stimuli
    Provide stimulus
    Keep track of stimuli
}
entity SessionInfo{
    Store info about active session
}
entity SpellingActivity{
    Present stimuli
    Collect responses
    Id session type
    Provide trial data to Data
    Prepare everything for new trial
    Make Data collect all data
    Determine end of the session
    Make Data save data
}
LoginScreen --> BeginMessageScreen
BeginMessageScreen --> SpellingActivity
SpellingActivity --> EndMessageScreen
SpellingActivity --> Data
SpellingActivity --> Stimuli
SpellingActivity --> App
SpellingActivity --> SessionInfo
Data --> TrialData 
Data --> SessionData
Data --> DeviceData
@enduml

@startuml Attributes
!theme spacelab
entity LoginScreen{}
entity BeginMessageScreen{}
entity EndMessageScreen{}
entity RestScreen{}
entity App{
    #title: str
    -kv_dir: str
    -self.theme_cls.theme_style: str
    -self.theme_cls.primary_palette: str
    #participant_id: str

    -build() --> None
}
entity SpellingActivity{
    stimuli: Stimuli
    data: Data
    session: SessionInfo
    trial_number: int
    rest_interval: int
    rest_period_active: bool

    on_enter()--> None 
    reset_everything() --> None
    toggle_allow_response(_, allow=False) --> None
    present_trial(_) --> None
    submit_response(response: str) --> None
    on_trial_number(_, value) --> None
    on_active_session(_, value) --> None
    end_session() --> None
    +save_data(filename: str) --> None     
}
entity SessionInfo{
    participant_id: str
    #session_name: str
    new_session: bool = True
    active_session: bool = True
    time_start: str
    time_end: str
    
    determine_session_name() --> str
}
entity Stimuli{
    stimuli: pd.Series[str] 
    current_stim: str
    count_total: int

    __init__(stimuli: iterable) --> None
    from_file(cls, filename: str) --> pd.Series[str]
    next(random: bool = False) --> str

    # properties
    count_remaining() --> int
    count_used() --> int
}
entity Data{
    participant_id: str
    session: Session
    device: Device
    trials: list[Trial]

    collect_session_data(time_start: str, time_end: str) --> None 
    collect_device_data() --> None
    add_trial_data(stim: str, resp: str) --> None
    save_data(filename: str) --> None
    format_data() --> pd.DataFrame
}
entity SessionData{
    participant_id: str
    date: str 
    time_start: str
    time_end: str
}
entity Trial{
    participant_id: str
    stim: str
    resp: str
}
entity Device{
    participant_id: str
    platforn: str
    dpi: float
    density: float
    aspect_ratio: float
}
LoginScreen --> BeginMessageScreen
BeginMessageScreen --> SpellingActivity 
SpellingActivity --> RestScreen
SpellingActivity --> EndMessageScreen
SpellingActivity --> App
SpellingActivity --> Data
SpellingActivity --> Stimuli
SpellingActivity --> SessionInfo
Data --> Trial
Data --> Device
Data --> SessionData
@enduml

